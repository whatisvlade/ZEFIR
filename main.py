from telegram import Update, ForceReply, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, CallbackQueryHandler, ContextTypes, filters
from flask import Flask
from threading import Thread
from PIL import Image, ImageDraw, ImageFont
import os

BOT_TOKEN = os.getenv("BOT_TOKEN")

app = Flask('')

@app.route('/')
def home():
    return "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Zefir Travel!\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üöå –ê–≤—Ç–æ–±—É—Å–Ω—ã–µ —Ç—É—Ä—ã", callback_data="bus_tours")],
            [InlineKeyboardButton("‚úàÔ∏è –ê–≤–∏–∞ —Ç—É—Ä—ã", callback_data="avia_tours")],
            [InlineKeyboardButton("üõÇ –í–∏–∑—ã", callback_data="visas")],
            [InlineKeyboardButton("üìû –°–≤—è–∑–∞—Ç—å—Å—è", callback_data="contact")]
        ])
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ù–∞–ø–∏—à–∏ –ª—é–±–æ–π —Ç–µ–∫—Å—Ç ‚Äî —è –ø—Ä–µ–≤—Ä–∞—â—É –µ–≥–æ –≤ –∫–∞—Ä—Ç–∏–Ω–∫—É!")

async def stylize(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    if user_message is None:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Ç–µ–∫—Å—Ç.")
        return

    img = Image.new('RGB', (500, 200), color=(73, 109, 137))
    draw = ImageDraw.Draw(img)
    font = ImageFont.load_default()
    draw.text((50, 90), user_message, font=font, fill=(255, 255, 0))

    img.save('styled_text.png')
    with open('styled_text.png', 'rb') as photo:
        await update.message.reply_photo(photo=photo)

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    response_map = {
        "bus_tours": "üöå –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∫–æ–º—Ñ–æ—Ä—Ç–Ω—ã–µ –∞–≤—Ç–æ–±—É—Å–Ω—ã–µ —Ç—É—Ä—ã –ø–æ –†–æ—Å—Å–∏–∏ –∏ –ï–≤—Ä–æ–ø–µ.",
        "avia_tours": "‚úàÔ∏è –ê–≤–∏–∞ —Ç—É—Ä—ã –≤ –ª—É—á—à–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è ‚Äî –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –Ω–∞ —Å–∞–π—Ç–µ –∏–ª–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É.",
        "visas": "üõÇ –ú—ã –ø–æ–º–æ–∂–µ–º —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º –≤–∏–∑ –≤ –ï–≤—Ä–æ–ø—É –∏ –¥—Ä—É–≥–∏–µ —Å—Ç—Ä–∞–Ω—ã.",
        "contact": "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏: +7 (000) 000-00-00 –∏–ª–∏ @–º–µ–Ω–µ–¥–∂–µ—Ä"
    }

    await query.edit_message_text(response_map.get(query.data, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ."))

async def main():
    application = ApplicationBuilder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, stylize))
    application.add_handler(CallbackQueryHandler(button_handler))
    keep_alive()
    await application.run_polling()

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())

