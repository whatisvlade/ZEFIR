from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
from flask import Flask
from threading import Thread
import os

BOT_TOKEN = os.getenv("BOT_TOKEN")

app = Flask('')

@app.route('/')
def home():
    return "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

def get_main_menu():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üöå –ê–≤—Ç–æ–±—É—Å–Ω—ã–µ —Ç—É—Ä—ã", callback_data="bus_tours")],
        [InlineKeyboardButton("‚úàÔ∏è –ê–≤–∏–∞ —Ç—É—Ä—ã", callback_data="avia_tours")],
        [InlineKeyboardButton("üõÇ –í–∏–∑—ã", callback_data="visas")],
        [InlineKeyboardButton("üìû –°–≤—è–∑–∞—Ç—å—Å—è", callback_data="contact")],
    ])

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    text = (
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Zefir Travel!\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:"
    )
    await update.message.reply_text(text, reply_markup=get_main_menu())

async def handle_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    data = query.data

    await query.answer()

    if data == "bus_tours":
        await query.edit_message_text("üöå –ê–≤—Ç–æ–±—É—Å–Ω—ã–µ —Ç—É—Ä—ã:
(—Ç–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç)", reply_markup=back_button())
    elif data == "avia_tours":
        await query.edit_message_text("‚úàÔ∏è –ê–≤–∏–∞ —Ç—É—Ä—ã:
(—Ç–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç)", reply_markup=back_button())
    elif data == "visas":
        await query.edit_message_text("üõÇ –í–∏–∑—ã:
(—Ç–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç)", reply_markup=back_button())
    elif data == "contact":
        await query.edit_message_text("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã:
(—Ç–µ—Å—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç)", reply_markup=back_button())
    elif data == "back":
        await query.edit_message_text(
            f"–ü—Ä–∏–≤–µ—Ç, {query.from_user.first_name}! üëã\n"
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Zefir Travel!\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:",
            reply_markup=get_main_menu()
        )

def back_button():
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back")]
    ])

async def main():
    application = ApplicationBuilder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(handle_callback))
    keep_alive()
    await application.run_polling()

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())
