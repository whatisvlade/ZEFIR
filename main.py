import asyncio
import os
from flask import Flask
from threading import Thread
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, CallbackQueryHandler, ContextTypes
from datetime import datetime

BOT_TOKEN = os.getenv("BOT_TOKEN")
MANAGER_CONTACT = "+375 29 000-00-00"  # –ò–∑–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π –Ω–æ–º–µ—Ä!
REQUEST_TRIGGER = "#–ó–ê–Ø–í–ö–ê"            # –°–ª–æ–≤–æ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ —á–∞—Ç–µ

app = Flask('')

@app.route('/')
def home():
    return "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç"

def run():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

# –°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω –¥–ª—è –≤–∏–∑
visa_countries = [
    ("üáÆüáπ –ò—Ç–∞–ª–∏—è", "italy"),
    ("üá™üá∏ –ò—Å–ø–∞–Ω–∏—è", "spain"),
    ("üáµüá± –ü–æ–ª—å—à–∞", "poland"),
    ("üá≠üá∫ –í–µ–Ω–≥—Ä–∏—è", "hungary"),
    ("üá´üá∑ –§—Ä–∞–Ω—Ü–∏—è", "france"),
    ("üáßüá¨ –ë–æ–ª–≥–∞—Ä–∏—è", "bulgaria"),
    ("üá¨üá∑ –ì—Ä–µ—Ü–∏—è", "greece")
]

# –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ–±—É—Å–Ω—ã—Ö —Ç—É—Ä–æ–≤
tour_links = {
    "georgia": (
        "–ì—Ä—É–∑–∏—è ‚Äî –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∞ —Å –≥–æ—Ä–∞–º–∏, –º–æ—Ä–µ–º –∏ –≤–∏–Ω–æ–º.",
        "https://example.com/georgia",
        "+375291234567"
    ),
    "abkhazia": (
        """<b>–ê–±—Ö–∞–∑–∏—è: –î–≤–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞!</b> 1Ô∏è‚É£ <b>–ê–í–¢–û–ë–£–°–ù–´–ô</b> ... 2Ô∏è‚É£ <b>–ñ–î</b> ... <b>–ü—Ä–æ–≥—Ä–∞–º–º—ã —Ç—É—Ä–∞:</b> (—Å—Å—ã–ª–∫–∞ –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ) """,
        "https://zefirtravel.by/avtobusnie-tury-iz-minska-s-otdyhom-na-more/?set_filter=y&arFilterTours_262_1198337567=Y",
        "+375292345678"
    ),
    "gelendzhik": (
        """<b>–¢—É—Ä –≤ –ì–µ–ª–µ–Ω–¥–∂–∏–∫</b> <b>–î–∞—Ç—ã:</b> ... <b>–ü—Ä–æ–≥—Ä–∞–º–º—ã —Ç—É—Ä–∞:</b> (—Å—Å—ã–ª–∫–∞ –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ) """,
        "https://zefirtravel.by/avtobusnie-tury-iz-minska-s-otdyhom-na-more/?set_filter=y&arFilterTours_262_2671772459=Y",
        "+375293456789"
    ),
    "dagestan": (
        """<b>–¢—É—Ä –≤ –î–∞–≥–µ—Å—Ç–∞–Ω</b> –î–∞—Ç—ã: ... """,
        "https://zefirtravel.by/offers/tur-v-dagestan-serdtse-kavkaza/",
        "+375294567890"
    ),
    "piter": (
        """<b>–¢—É—Ä –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥</b> <b>–î–∞—Ç—ã:</b> ... <b>–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—É—Ä–∞:</b> (—Å—Å—ã–ª–∫–∞ –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ) """,
        "https://zefirtravel.by/offers/tur-v-sankt-peterburg-kareliya/",
        "+375295678901"
    ),
    "teriberka": (
        """<b>–¢—É—Ä –≤ –¢–µ—Ä–∏–±–µ—Ä–∫—É!</b> <b>–î–∞—Ç—ã:</b> ... """,
        "https://zefirtravel.by/offers/teriberka-aysfloating-i-mogushchestvennye-kity/",
        "+375296789012"
    ),
    "belarus": (
        """<b>–ó–∞–ø–∞–¥–Ω—ã–µ —Å–æ–∫—Ä–æ–≤–∏—â–∞ –ë–µ–ª–∞—Ä—É—Å–∏: –ö–æ—Å—Å–æ–≤–æ –∏ –†—É–∂–∞–Ω—ã</b> –î–∞—Ç—ã: ... <b>–ü–æ–¥—Ä–æ–±–Ω–µ–µ:</b> (—Å—Å—ã–ª–∫–∞ –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ) """,
        "https://zefirtravel.by/offers/zapadnye-sokrovishcha-belarusi-kossovo-i-ruzhany/",
        "+375297890123"
    ),
}

# –ù–∞–∑–≤–∞–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π
direction_names = {
    "georgia": "–ì—Ä—É–∑–∏—è",
    "abkhazia": "–ê–±—Ö–∞–∑–∏—è",
    "gelendzhik": "–ì–µ–ª–µ–Ω–¥–∂–∏–∫",
    "dagestan": "–î–∞–≥–µ—Å—Ç–∞–Ω",
    "piter": "–ü–∏—Ç–µ—Ä",
    "teriberka": "–¢–µ—Ä–∏–±–µ—Ä–∫–∞",
    "belarus": "–ë–µ–ª–∞—Ä—É—Å—å",
    "italy": "–ò—Ç–∞–ª–∏—è",
    "spain": "–ò—Å–ø–∞–Ω–∏—è",
    "poland": "–ü–æ–ª—å—à–∞",
    "hungary": "–í–µ–Ω–≥—Ä–∏—è",
    "france": "–§—Ä–∞–Ω—Ü–∏—è",
    "bulgaria": "–ë–æ–ª–≥–∞—Ä–∏—è",
    "greece": "–ì—Ä–µ—Ü–∏—è"
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    await update.message.reply_text(
        f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Zefir Travel!\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:",
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üöå –ê–≤—Ç–æ–±—É—Å–Ω—ã–µ —Ç—É—Ä—ã", callback_data="bus_tours")],
            [InlineKeyboardButton("‚úàÔ∏è –ê–≤–∏–∞ —Ç—É—Ä—ã", callback_data="avia_tours")],
            [InlineKeyboardButton("üõÇ –í–∏–∑—ã", callback_data="visas")],
            [InlineKeyboardButton("üìû –°–≤—è–∑–∞—Ç—å—Å—è", callback_data="contact")]
        ])
    )

async def handle_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    # --- –ê–≤—Ç–æ–±—É—Å–Ω—ã–µ —Ç—É—Ä—ã ---
    if query.data == "bus_tours":
        await query.edit_message_text(
            "üöå –ê–≤—Ç–æ–±—É—Å–Ω—ã–µ —Ç—É—Ä—ã:\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üåÑüèñÔ∏è –ì—Ä—É–∑–∏—è", callback_data="georgia")],
                [InlineKeyboardButton("üåÑüèñÔ∏è –ê–±—Ö–∞–∑–∏—è", callback_data="abkhazia")],
                [InlineKeyboardButton("üèñÔ∏è –ì–µ–ª–µ–Ω–¥–∂–∏–∫", callback_data="gelendzhik")],
                [InlineKeyboardButton("üåÑ –î–∞–≥–µ—Å—Ç–∞–Ω", callback_data="dagestan")],
                [InlineKeyboardButton("üåâ –ü–∏—Ç–µ—Ä", callback_data="piter")],
                [InlineKeyboardButton("‚ùÑÔ∏è –¢–µ—Ä–∏–±–µ—Ä–∫–∞", callback_data="teriberka")],
                [InlineKeyboardButton("üáßüáæ –ë–µ–ª–∞—Ä—É—Å—å", callback_data="belarus")],
                [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
            ])
        )

    # --- –í–∏–∑—ã, –≤—Å–µ —Å—Ç—Ä–∞–Ω—ã —Å–ø–∏—Å–∫–æ–º, –∫–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –≤ —Ç–µ–∫—Å—Ç–µ ---
    elif query.data == "visas":
        countries_buttons = [
            [InlineKeyboardButton(flag, callback_data=f"visa_{code}")] for flag, code in visa_countries
        ]
        countries_buttons.append([InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")])
        await query.edit_message_text(
            "üõÇ –í–∏–∑—ã:\n–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –≤–∏–∑—ã:\n\n"
            f"üì± –ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞: <code>{MANAGER_CONTACT}</code>",
            reply_markup=InlineKeyboardMarkup(countries_buttons),
            parse_mode="HTML"
        )

    # --- –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—Ç—Ä–∞–Ω—ã –ø–æ –≤–∏–∑–∞–º ---
    elif query.data.startswith("visa_"):
        country_code = query.data.replace("visa_", "")
        country = direction_names.get(country_code, country_code)
        await query.edit_message_text(
            f"üõÇ <b>–í–∏–∑–∞ –≤ {country}</b>\n\n–•–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤–∏–∑—É –≤ {country}?",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data=f"visa_request_{country_code}")],
                [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="visas")]
            ]),
            parse_mode="HTML"
        )

    # --- –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–±—É—Å–æ–≤ ---
    elif query.data in tour_links.keys():
        text, url, manager_phone = tour_links[query.data]
        await query.edit_message_text(
            f"{text}\n\nüì± –ö–æ–Ω—Ç–∞–∫—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞: <code>{manager_phone}</code>",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üîó –ü–æ–¥—Ä–æ–±–Ω–µ–µ / –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ç—É—Ä–∞", url=url)],
                [InlineKeyboardButton("–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data=f"request_{query.data}")],
                [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="bus_tours")]
            ]),
            parse_mode="HTML"
        )

    # --- –û–ë–©–ê–Ø –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞—è–≤–æ–∫ –¥–ª—è –≤–∏–∑ –∏ –∞–≤—Ç–æ–±—É—Å–Ω—ã—Ö —Ç—É—Ä–æ–≤ ---
    elif query.data.startswith("request_") or query.data.startswith("visa_request_"):
        if query.data.startswith("request_"):
            direction = query.data.replace("request_", "")
            title = f"–¢—É—Ä: {direction_names.get(direction, direction)}"
            back_btn = "bus_tours"
        else:
            direction = query.data.replace("visa_request_", "")
            title = f"–í–∏–∑–∞: {direction_names.get(direction, direction)}"
            back_btn = "visas"

        user = query.from_user

        # –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –º–µ–Ω–µ–¥–∂–µ—Ä—É (—Å—é–¥–∞ –∂–µ –¥–ª—è —Ç–µ—Å—Ç–∞, –º–æ–∂–Ω–æ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–π chat_id)
        MANAGER_CHAT_ID = os.getenv("MANAGER_CHAT_ID", None)  # –í—Å—Ç–∞–≤—å —Ä–µ–∞–ª—å–Ω—ã–π chat_id –º–µ–Ω–µ–¥–∂–µ—Ä–∞!
        if MANAGER_CHAT_ID:
           await context.bot.send_message(
               chat_id=MANAGER_CHAT_ID,
                text=f"{REQUEST_TRIGGER} {title}\n–ò–º—è: {user.first_name} @{user.username if user.username else ''}"
           )


        # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        now_hour = datetime.now().hour
        if 21 <= now_hour or now_hour < 10:
            resp = "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!\n–í —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä."
        else:
            resp = "–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!\n–û–∂–∏–¥–∞–π—Ç–µ, —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä."

        await query.edit_message_text(resp, reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data=back_btn)]
        ]))

    # --- –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –∞–≤–∏–∞ —Ç—É—Ä–æ–≤ ---
    elif query.data == "avia_tours":
        await query.edit_message_text(
            "‚úàÔ∏è –ê–≤–∏–∞ —Ç—É—Ä—ã:\n–¢—É—Ç –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∞–≤–∏–∞–ø–µ—Ä–µ–ª–µ—Ç–∞—Ö (–∑–∞–≥–ª—É—à–∫–∞)",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
            ])
        )

    # --- –ö–æ–Ω—Ç–∞–∫—Ç ---
    elif query.data == "contact":
        await query.edit_message_text(
            f"üìû –°–≤—è–∑–∞—Ç—å—Å—è:\n–¢–µ–ª–µ—Ñ–æ–Ω: {MANAGER_CONTACT}\nEmail: info@zefir.travel",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="back_to_menu")]
            ])
        )

    # --- –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ---
    elif query.data == "back_to_menu":
        await query.edit_message_text(
            f"–ü—Ä–∏–≤–µ—Ç, {query.from_user.first_name}! üëã\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Zefir Travel!\n–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:",
            reply_markup=InlineKeyboardMarkup([
                [InlineKeyboardButton("üöå –ê–≤—Ç–æ–±—É—Å–Ω—ã–µ —Ç—É—Ä—ã", callback_data="bus_tours")],
                [InlineKeyboardButton("‚úàÔ∏è –ê–≤–∏–∞ —Ç—É—Ä—ã", callback_data="avia_tours")],
                [InlineKeyboardButton("üõÇ –í–∏–∑—ã", callback_data="visas")],
                [InlineKeyboardButton("üìû –°–≤—è–∑–∞—Ç—å—Å—è", callback_data="contact")]
            ])
        )

async def main():
    application = ApplicationBuilder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(handle_button))
    keep_alive()
    await application.run_polling()

if __name__ == '__main__':
    import nest_asyncio
    nest_asyncio.apply()
    asyncio.run(main())
